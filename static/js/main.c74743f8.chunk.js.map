{"version":3,"sources":["player/styles.module.css","player/player-timeline/styles.module.css","player/playlist-item/styles.module.css","logo.svg","player/playlist.js","player/audio-files/sinatra.mp3","player/audio-files/wu-tang.mp3","player/playlist-item/index.js","player/player-timeline/index.js","utils/convert-to-minutes.js","player/index.js","utils/throttling.js","utils/convert-to-color.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","playList","title","author","audioFile","id","PlaylistItem","item","onClick","className","styles","_","PlayerTimeline","duration","currentTime","e","rect","currentTarget","getBoundingClientRect","percentage","clientX","left","width","style","time","hrs","mins","secs","ret","window","AudioContext","webkitAudioContext","Player","useState","playlist","currentTrack","setCurrentTrack","setCurrentTime","audioCtx","setAudioCtx","setDuration","isPlaying","setIsPlaying","myPlayer","useRef","myEqualizer","onTimeUpdate","callback","limit","waiting","apply","this","arguments","setTimeout","throttling","target","useEffect","ctx","audio","current","audioSrc","createMediaElementSource","analyser","createAnalyser","fftSize","connect","destination","bufferLength","frequencyBinCount","dataArray","Uint8Array","equalizer","requestAnimationFrame","getByteFrequencyData","data","toString","backgroundColor","Math","random","innerText","ref","ctm","pause","state","resume","play","src","onPlay","onPause","console","log","onLoadedData","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c74743f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"styles_player__1gY7t\",\"player__equalizer\":\"styles_player__equalizer__2gt1l\",\"player__controls\":\"styles_player__controls__2SwqT\",\"player__playlist\":\"styles_player__playlist__dSZWw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player-timeline\":\"styles_player-timeline__EC2Dm\",\"player-timeline__bar\":\"styles_player-timeline__bar__2a6j9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playlist-item\":\"styles_playlist-item__3Pgob\"};","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import sinatra from './audio-files/sinatra.mp3'\nimport wuTang from './audio-files/wu-tang.mp3'\n\nconst playList = [\n  {\n    title: 'Thats life',\n    author: 'Sinatra',\n    audioFile: sinatra,\n    id: 1\n  }, {\n    title: 'CREAM',\n    author: 'Wu-tang',\n    audioFile: wuTang,\n    id: 2\n  }\n]\n\nexport default playList","export default __webpack_public_path__ + \"static/media/sinatra.40f71391.mp3\";","export default __webpack_public_path__ + \"static/media/wu-tang.dedc9be2.mp3\";","import React from 'react'\nimport styles from './styles.module.css'\n\nconst PlaylistItem = ({ item, onClick }) => {\n  const { title = 'No title', author = 'No author' } = item\n  return <div\n    className={styles['playlist-item']}\n    onClick={_ => onClick(item)}\n  >\n    {author} - {title}\n  </div>\n}\n\n\nexport default PlaylistItem","import React from 'react'\nimport styles from './styles.module.css'\n\nconst PlayerTimeline = ({ duration, currentTime, onClick }) => {\n  const clickHandler = e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const percentage = x / rect.width * 100\n    const timeToGo = duration / 100 * percentage\n    onClick(timeToGo)\n  }\n\n  return <div\n    className={styles['player-timeline']}\n    onClick={clickHandler}\n  >\n    <div\n      className={styles['player-timeline__bar']}\n      style={{\n        width: `${currentTime / duration * 100}%`\n      }}\n    />\n  </div>\n}\n\n\nexport default PlayerTimeline","export default (time) => {   \n    // Hours, minutes and seconds\n    var hrs = ~~(time / 3600);\n    var mins = ~~((time % 3600) / 60);\n    var secs = ~~time % 60;\n\n    // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n    var ret = \"\";\n    if (hrs > 0) {\n        ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n    ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n}\n\n","import React, { useState, useRef, useEffect } from 'react'\nimport styles from './styles.module.css'\nimport playlist from './playlist'\nimport PlaylistItem from './playlist-item'\nimport PlayerTimeline from './player-timeline'\nimport throttling from '../utils/throttling'\nimport convertToColor from '../utils/convert-to-color'\nimport ctm from '../utils/convert-to-minutes'\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\n\nconst Player = () => {\n  const [ currentTrack, setCurrentTrack ] = useState(playlist[0])\n  const [ currentTime, setCurrentTime ] = useState(0)\n  const [ audioCtx, setAudioCtx ] = useState(null)\n  // запустили плеер -> каждую секунду обновляем currentTime\n  const [ duration, setDuration ] = useState(0)\n  // запустили плеер -> единожды обновляем duration\n\n  const [ isPlaying, setIsPlaying ] = useState(false)\n  // запустили плеер -> isPlaying делаем true\n  // остановили плеер -> isPlaying делаем false\n\n  const myPlayer = useRef(null)\n  const myEqualizer = useRef(null)\n\n\n  const onTimeUpdate = throttling(e => {\n    setCurrentTime(e.target.currentTime)\n  }, 1000)\n\n  const onPlay = e => {\n    setDuration(e.target.duration)\n  }\n\n  useEffect(_ => {\n    const ctx = new AudioContext();\n    const audio = myPlayer.current\n    const audioSrc = ctx.createMediaElementSource(audio)\n    const analyser = ctx.createAnalyser();\n    analyser.fftSize = 128;\n    \n    audioSrc\n      .connect(analyser)\n      .connect(ctx.destination)\n    analyser.connect(ctx.destination)\n\n    setAudioCtx(ctx)\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const equalizer = _ => {\n      requestAnimationFrame(equalizer)\n      analyser.getByteFrequencyData(dataArray);\n      const data = dataArray.toString()\n      myEqualizer.current.style.backgroundColor = convertToColor(dataArray.toString(data))\n      myEqualizer.current.innerText = data\n    }\n\n    equalizer()\n\n    \n    // // we could configure the analyser: e.g. analyser.fftSize (for further infos read the spec)\n   \n    // // frequencyBinCount tells you how many values you'll receive from the analyser\n    \n    // // // we're ready to receive some data!\n    // // // loop\n    \n  }, [])\n\n  return <div\n    className={styles['player']}\n  >\n    <div className={styles['player__equalizer']} ref={myEqualizer} />\n    <div className={styles['player__controls']}>\n      <PlayerTimeline\n        currentTime={currentTime}\n        duration={duration}\n        onClick={time => {\n          myPlayer.current.currentTime = time\n        }}\n      />\n      <div>{currentTrack.title}</div>\n      <div>playing time: {ctm(currentTime)}</div>\n      <div>duration: {ctm(duration)}</div>\n      <button\n        onClick={_ => {\n          if (isPlaying) {\n            myPlayer.current.pause()\n            setIsPlaying(false)\n          } else {\n            \n            if (audioCtx.state === 'suspended') {\n              audioCtx.resume();\n            }\n            myPlayer.current.play()\n            setIsPlaying(true)\n          }\n        }}\n      >\n        {isPlaying ? 'pause' : 'play'}\n      </button>\n      <audio\n        src={currentTrack.audioFile}\n        className={styles['player__audio']}\n        ref={myPlayer}\n        onPlay={onPlay}\n        onPause={_ => console.log('pause')}\n        onTimeUpdate={onTimeUpdate}\n        onLoadedData={_ => \n          setDuration(myPlayer.current.duration)\n        }\n      />\n    </div>\n\n\n    <div className={styles['player__playlist']}>\n      {playlist.map(item => <PlaylistItem\n        item={item}\n        key={item.id}\n        onClick={item => {\n          setCurrentTrack(item)\n          setIsPlaying(false)\n        }}\n      />)}\n    </div>\n  </div>\n}\n\n\nexport default Player","export default function (callback, limit) {\n  var waiting = false;                      // Initially, we're not waiting\n  return function () {                      // We return a throttled function\n      if (!waiting) {                       // If we're not waiting\n          callback.apply(this, arguments);  // Execute users function\n          waiting = true;                   // Prevent future invocations\n          setTimeout(function () {          // After a period of time\n              waiting = false;              // And allow future invocations\n          }, limit);\n      }\n  }\n}","export default (str) => {\n  // here do anything with string\n  return '#'+ Math.random()*0xFFFFFF<<0\n}","import logo from './logo.svg';\nimport './App.css';\nimport Player from './player'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Player />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}